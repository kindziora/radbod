var radbod =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./build/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./build/app.js":
/*!**********************!*\
  !*** ./build/app.js ***!
  \**********************/
/*! exports provided: app */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"app\", function() { return app; });\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"./build/dom.js\");\n/* harmony import */ var _eventHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eventHandler.js */ \"./build/eventHandler.js\");\n/* harmony import */ var _dataHandler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataHandler.js */ \"./build/dataHandler.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./store.js */ \"./build/store.js\");\n\n\n\n\nclass app {\n    constructor(environment) {\n        this.components = {};\n        this.sharedComponents = {};\n        this.environment = environment;\n        this.dataH = new _dataHandler_js__WEBPACK_IMPORTED_MODULE_2__[\"dataHandler\"](new _eventHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"eventHandler\"](), environment);\n    }\n    replaceFunctionHeader(funcString, newFunctionHeader) {\n        const functionHeader = /\\([\\w,\\s]+\\)+(\\s+|)=>/m;\n        return funcString.replace(functionHeader, `(${newFunctionHeader})=>`);\n    }\n    /**\n     *\n     * @param name\n     * @param componentObject\n     * @param callback\n     */\n    mountComponent(name, componentObject, callback) {\n        console.log(`mount component: ${name}`, this.loadStores(componentObject, (stores, meta, data) => {\n            let compo = this.createComponent(name, data, componentObject);\n            callback(stores, meta, compo);\n        }));\n    }\n    setLanguage(languageCode) {\n        this.dataH.internationalize.setLanguage(languageCode);\n    }\n    getLanguage(languageCode) {\n        return this.dataH.internationalize.getLanguage();\n    }\n    /**\n    *\n    * @param name\n    * @param html\n    * @param data\n    * @param actions\n    * @param injections\n    */\n    createComponent(name, data, componentObject) {\n        let componentID = name.split(\"#\").length > 1 ? name.split(\"#\")[1] : name;\n        name = name.split(\"#\").length > 1 ? name.split(\"#\")[0] : name;\n        data = (typeof data === \"undefined\" || typeof data.then === \"function\") ? this.dataH.createStore(name, {}) : data;\n        if (!(data instanceof _store_js__WEBPACK_IMPORTED_MODULE_3__[\"store\"]))\n            data = this.dataH.createStore(name, data);\n        let el = document.createElement(\"component\");\n        this.dataH.internationalize.addTranslation(typeof componentObject.translations === \"function\" ? componentObject.translations.call() : componentObject.translations);\n        this.dataH.internationalize.setLanguage(componentObject === null || componentObject === void 0 ? void 0 : componentObject.language);\n        el.setAttribute(\"data-name\", name);\n        for (let name in componentObject.components) {\n            if (typeof componentObject.components[name] === \"string\") {\n                let nameID = componentObject.components[name].split(\"#\").length > 0 ? componentObject.components[name].split(\"#\")[1] : componentObject.components[name];\n                componentObject.components[name] = this.components[nameID];\n            }\n        }\n        let ddom = new _dom_js__WEBPACK_IMPORTED_MODULE_0__[\"dom\"](el, componentObject.components, data, componentObject === null || componentObject === void 0 ? void 0 : componentObject.views, this.dataH.internationalize);\n        ddom.name = name;\n        this.components[componentID] = ddom.createComponent(name, el, componentObject);\n        return this.components[componentID];\n    }\n    /**\n     *\n     * @param componentID\n     */\n    removeComponent(componentID) {\n        delete this.components[componentID];\n    }\n    /**\n     *\n     * @param url\n     */\n    render(url) {\n    }\n    fetchData(component, cb, allready, total, meta) {\n        let callback = function (meta, dataH) {\n            return (data) => {\n                cb(data, component);\n                meta.cnt++;\n                meta.loaded.push(component);\n                if (meta.cnt >= total) {\n                    allready(dataH, meta, data);\n                }\n            };\n        };\n        if (typeof component === \"string\") {\n            let nameID = component.split(\"#\").length > 0 ? component.split(\"#\")[1] : component;\n            component = this.components[nameID];\n            //what now?\n        }\n        else {\n            if (component.data) {\n                let result;\n                result = component.data.call(this.dataH, callback(meta, this.dataH), {});\n                if (!result || typeof result.then !== \"function\") {\n                    callback(meta, this.dataH)(result);\n                }\n                for (let i in component.components) {\n                    this.fetchData(component.components[i], cb, allready, total, meta);\n                }\n            }\n        }\n    }\n    countForData(component, cnt) {\n        for (let i in component.components) {\n            if (typeof component.components[i] !== \"string\")\n                cnt = this.countForData(component.components[i], cnt);\n        }\n        return ++cnt;\n    }\n    loadStores(componentObject, cb) {\n        let count = this.countForData(componentObject, 0);\n        let met = { cnt: 0, loaded: [] };\n        this.fetchData(componentObject, (data, component) => {\n            var _a;\n            console.log(\"fetchData: \", data.name, data);\n            component.environment = this.environment;\n            (_a = component === null || component === void 0 ? void 0 : component.loaded) === null || _a === void 0 ? void 0 : _a.call(component, data);\n        }, cb, count, met, this.dataH);\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/app.js?");

/***/ }),

/***/ "./build/component.js":
/*!****************************!*\
  !*** ./build/component.js ***!
  \****************************/
/*! exports provided: component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"component\", function() { return component; });\nclass component {\n    /**\n     *\n     * @param dom\n     * @param store\n     */\n    constructor(dom, interactions) {\n        var _a;\n        this.name = \"\";\n        this.interactions = {};\n        this.dom = dom;\n        this.store = dom.store;\n        this.interactions = interactions;\n        this.name = this.dom.name;\n        this.$el = dom._area;\n        this.setId(this.name, this.dom.counter++);\n        this.bindEvents();\n        (_a = this.store.events) === null || _a === void 0 ? void 0 : _a.add(`/$${this.name}`, \"post_render\", this.bindByInteractions, this);\n    }\n    getName() {\n        return this.name;\n    }\n    setId(namesp, counter) {\n        let id = namesp || \"component\" + \"-\" + counter;\n        this.$el.setAttribute(\"data-id\", id);\n        this.id = id;\n    }\n    bindEvents() {\n        var _a, _b, _c, _d, _e;\n        //this.update.bind(this);\n        //wrong this context\n        (_a = this.store.events) === null || _a === void 0 ? void 0 : _a.add(\"/$\" + this.store.name, \"change\", this.update, this);\n        (_b = this.store.events) === null || _b === void 0 ? void 0 : _b.add(\"/_state\", \"change\", this.update, this);\n        (_c = this.store.events) === null || _c === void 0 ? void 0 : _c.add(\"/$\" + this.store.name, \"change\", (_e = (_d = this.interactions) === null || _d === void 0 ? void 0 : _d[\"/$\" + this.store.name]) === null || _e === void 0 ? void 0 : _e[\"change\"], this);\n        this.bindNonDomInteractions();\n        this.bindByInteractions({ change: {}, domScope: this.$el });\n    }\n    bindNonDomInteractions() {\n        var _a, _b, _c;\n        for (let path in this.interactions) {\n            if (typeof this.dom.elementByName[path] === \"undefined\") {\n                for (let event in this.interactions[path]) {\n                    let name = this.store.unmaskComponentName(path, \"/\").split(\"/\").shift();\n                    (_a = this.store.events) === null || _a === void 0 ? void 0 : _a.add(path, event, (_c = (_b = this.interactions) === null || _b === void 0 ? void 0 : _b[path]) === null || _c === void 0 ? void 0 : _c[event], this);\n                }\n            }\n        }\n    }\n    bindByInteractions(meta) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let { change, domScope, readd } = meta;\n        let loaded = this.dom.loadElementsScoped(domScope) || [];\n        // ONLY ITERATE OVER FIELDS THAT ARE REALY IN SCOPE AND NOT FROM ANY SCOPE OVER ALL FIELDS!!!!!!!!!!!!!\n        console.log(\"bindByInteractions\", this.name, change, domScope);\n        for (let t in loaded) {\n            let t_el = loaded[t];\n            if (t_el.$el.hasAttribute(\"data-events\")) {\n                let onEvents = (_a = t_el.$el.getAttribute(\"data-events\")) === null || _a === void 0 ? void 0 : _a.split(\",\");\n                for (let events in onEvents) {\n                    let nameEvent = onEvents[events].split(\":\");\n                    if (typeof this.interactions[nameEvent[0]] !== \"undefined\" && typeof this.interactions[nameEvent[0]][nameEvent[1]] !== \"undefined\") {\n                        let added = (_b = this.store.events) === null || _b === void 0 ? void 0 : _b.addByElement(this.name, t_el.$el, nameEvent[1], this.interactions[nameEvent[0]][nameEvent[1]], this);\n                        if (added || readd) {\n                            let func = makeFunc(t_el, this, t_el.$el, nameEvent[1]);\n                            t_el.$el.addEventListener(nameEvent[1], func);\n                        }\n                    }\n                    else {\n                        console.log(\"No interaction callback found for: \", onEvents[events]);\n                    }\n                }\n            }\n        }\n        function makeFunc(f, me, $el, event) {\n            return function (ev) {\n                var _a;\n                (_a = me.store.events) === null || _a === void 0 ? void 0 : _a.dispatchEvent(me.name, $el, event, { \"field\": f, ev }, me.store.data, me.interactions);\n            };\n        }\n        /**\n         * @todo WeakMaps für events nutzen und $el als key\n         *\n         */\n        for (let path in this.interactions) {\n            for (let event in this.interactions[path]) {\n                for (let field in this.dom.elementByName[path]) {\n                    let $el = this.dom.elementByName[path][field].$el;\n                    let fieldID = this.dom.elementByName[path][field].id;\n                    let mapEvent = event.split('#');\n                    let eventList = (_d = (_c = this.interactions) === null || _c === void 0 ? void 0 : _c[path]) === null || _d === void 0 ? void 0 : _d[event];\n                    if (!Array.isArray(eventList)) {\n                        eventList = [(_f = (_e = this.interactions) === null || _e === void 0 ? void 0 : _e[path]) === null || _f === void 0 ? void 0 : _f[event]];\n                    }\n                    for (let evt in eventList) {\n                        let added = (_g = this.store.events) === null || _g === void 0 ? void 0 : _g.addByElement(this.name, $el, event, eventList[evt], this);\n                        if (added || readd) {\n                            let eventName = (mapEvent.length > 1 && fieldID === mapEvent[1]) ? mapEvent[0] : event;\n                            let func = makeFunc(this.dom.elementByName[path][field], this, $el, event);\n                            $el.addEventListener(eventName, func);\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     *\n     * nächste todos\n     * garbage collection für elements mit hilfe von remove element und kelementBy$el, elementByName, element, events die auf elements matchen alles per event handling event \"remove_element\"\n     *\n     * @param changes\n     */\n    update(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            let change = changes[i];\n            let chs = this.dom.findMatchingElements(change.path);\n            let store = this.store;\n            let getArrayItemPath = this.dom.getArrayItemPath;\n            chs.forEach(function (el) {\n                let fieldPath = el.$el.getAttribute(\"data-name\");\n                if (change.path !== fieldPath && change.op !== \"add\") {\n                    if (el.constructor.name !== \"elist\") {\n                        let val = store.accessByPath(fieldPath); //get correct context/scope\n                        return el.update([{ op: \"replace\", path: fieldPath, value: val }]);\n                    }\n                    else {\n                        let itemPath = getArrayItemPath(change.path);\n                        let val = store.accessByPath(itemPath);\n                        if (val)\n                            return el.update([{ op: \"add\", path: itemPath, value: val }]);\n                    }\n                }\n                else {\n                    return el.update([change]);\n                }\n            });\n        }\n    }\n    render(changes) {\n        console.log(\"COMPONENT UPDATE ??? BECAUSE NO FIELD TO MATCH\");\n        return this.dom.render(changes);\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/component.js?");

/***/ }),

/***/ "./build/dataHandler.js":
/*!******************************!*\
  !*** ./build/dataHandler.js ***!
  \******************************/
/*! exports provided: dataHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataHandler\", function() { return dataHandler; });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"./build/store.js\");\n/* harmony import */ var _middlewareHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./middlewareHandler.js */ \"./build/middlewareHandler.js\");\n/* harmony import */ var _i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18n.js */ \"./build/i18n.js\");\n\n\n\nclass dataHandler {\n    constructor(eventH, environment) {\n        this.store = {};\n        this.pxy = {};\n        this.events = eventH;\n        this.environment = environment;\n        this.internationalize = new _i18n_js__WEBPACK_IMPORTED_MODULE_2__[\"i18n\"]();\n        this.store.toObject = () => {\n            let arr = {};\n            for (let i in this.store) {\n                if (typeof this.store[i] === \"object\")\n                    arr[i] = this.store[i].data;\n            }\n            return arr || {};\n        };\n        this.store.toArray = () => {\n            let arr = [];\n            for (let i in this.store) {\n                if (typeof this.store[i] === \"object\")\n                    arr.push(this.store[i].data);\n            }\n            let e = arr.sort() || [];\n            return e;\n        };\n        this.store.keys = () => {\n            let arr = [];\n            for (let i in this.store) {\n                if (typeof this.store[i] === \"object\")\n                    arr.push(i);\n            }\n            return arr.sort();\n        };\n        this.middlewareHandler = new _middlewareHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"middlewareHandler\"](environment);\n        this.middlewareHandler.addMiddleware(\"preView\");\n    }\n    /**\n     *\n     * @param component\n     * @param data\n     */\n    createStore(component, data) {\n        var _a;\n        if (this.store[component] && data instanceof _store_js__WEBPACK_IMPORTED_MODULE_0__[\"store\"]) {\n            this.store[component] = data;\n            return this.store[component];\n        }\n        else {\n            this.store[component] = new _store_js__WEBPACK_IMPORTED_MODULE_0__[\"store\"](this.events, this, component, data);\n            this.store[component].setDb((_a = this === null || this === void 0 ? void 0 : this.environment) === null || _a === void 0 ? void 0 : _a.data_loader);\n            return this.store[component];\n        }\n    }\n    /**\n     *\n     * @param component\n     */\n    destroyStore(component) {\n        delete this.store[component];\n    }\n    getStore(component) {\n        return this.store[component];\n    }\n    /**\n     * collect all changes then bubble event after ...what is important?\n     * @param component\n     * @param changes\n     */\n    changeStores(component, change) {\n        console.log(component, change);\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dataHandler.js?");

/***/ }),

/***/ "./build/dom.js":
/*!**********************!*\
  !*** ./build/dom.js ***!
  \**********************/
/*! exports provided: dom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dom\", function() { return dom; });\n/* harmony import */ var _dom_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/element.js */ \"./build/dom/element.js\");\n/* harmony import */ var _dom_element_input_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom/element/input.js */ \"./build/dom/element/input.js\");\n/* harmony import */ var _dom_element_input_radio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom/element/input/radio.js */ \"./build/dom/element/input/radio.js\");\n/* harmony import */ var _dom_element_input_checkbox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom/element/input/checkbox.js */ \"./build/dom/element/input/checkbox.js\");\n/* harmony import */ var _dom_element_input_text_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dom/element/input/text.js */ \"./build/dom/element/input/text.js\");\n/* harmony import */ var _dom_element_input_range_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom/element/input/range.js */ \"./build/dom/element/input/range.js\");\n/* harmony import */ var _dom_element_input_file_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom/element/input/file.js */ \"./build/dom/element/input/file.js\");\n/* harmony import */ var _dom_element_button_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom/element/button.js */ \"./build/dom/element/button.js\");\n/* harmony import */ var _dom_list_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dom/list.js */ \"./build/dom/list.js\");\n/* harmony import */ var _dom_list_select_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dom/list/select.js */ \"./build/dom/list/select.js\");\n/* harmony import */ var _dom_list_listItem_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dom/list/listItem.js */ \"./build/dom/list/listItem.js\");\n/* harmony import */ var _dom_element_textarea_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dom/element/textarea.js */ \"./build/dom/element/textarea.js\");\n/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./component.js */ \"./build/component.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass dom {\n    constructor(area, types, s, views, translation, counter = 0) {\n        this._area = {};\n        this._identifier = ':scope *';\n        this.componentList = {};\n        this.element = {};\n        this.elementByName = {};\n        this.elementTypes = { listItem: _dom_list_listItem_js__WEBPACK_IMPORTED_MODULE_10__[\"listItem\"], input: _dom_element_input_js__WEBPACK_IMPORTED_MODULE_1__[\"input\"], text: _dom_element_input_text_js__WEBPACK_IMPORTED_MODULE_4__[\"text\"], radio: _dom_element_input_radio_js__WEBPACK_IMPORTED_MODULE_2__[\"radio\"], checkbox: _dom_element_input_checkbox_js__WEBPACK_IMPORTED_MODULE_3__[\"checkbox\"], range: _dom_element_input_range_js__WEBPACK_IMPORTED_MODULE_5__[\"range\"], file: _dom_element_input_file_js__WEBPACK_IMPORTED_MODULE_6__[\"file\"], button: _dom_element_button_js__WEBPACK_IMPORTED_MODULE_7__[\"button\"], list: _dom_list_js__WEBPACK_IMPORTED_MODULE_8__[\"elist\"], select: _dom_list_select_js__WEBPACK_IMPORTED_MODULE_9__[\"select\"], textarea: _dom_element_textarea_js__WEBPACK_IMPORTED_MODULE_11__[\"textarea\"], kelement: _dom_element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] };\n        this.counter = 0;\n        this.id = \"c-0\";\n        this.name = \"c-x\";\n        this._area = area;\n        this.$el = this._area;\n        this.views = views;\n        this.translation = translation;\n        this._t = (text, lang) => this.translation._t(text, lang);\n        this.kelementBy$el = new WeakMap();\n        if (area.hasAttribute('data-name')) {\n            this.name = area.getAttribute('data-name');\n        }\n        else {\n            this.name = area === null || area === void 0 ? void 0 : area.tagName;\n        }\n        this._identifier = `:scope *`;\n        this.counter = counter;\n        this.setId();\n        this.store = s;\n        this.addTypes(types);\n        this.loadElements();\n    }\n    setTemplate(template) {\n        this.template = template;\n    }\n    /**\n     * !!caution this is slow and overwrites the home html of the dom area\n     * @param data\n     */\n    render(data) {\n        var _a, _b, _c;\n        this.element = {};\n        this.elementByName = {};\n        let storeObject = (_a = this.store.dataH) === null || _a === void 0 ? void 0 : _a.store.toObject();\n        this._area.innerHTML = (this.template.call(this, Object.assign(Object.assign({ change: data }, storeObject), { _t: this._t, env: (_b = this.store) === null || _b === void 0 ? void 0 : _b.dataH.environment })) + \"\").trim();\n        this.kelementBy$el = new WeakMap();\n        this.loadElements();\n        (_c = this.store.events) === null || _c === void 0 ? void 0 : _c.dispatchEvent(this.name, `/$${this.name}`, \"post_render\", { change: data, domScope: this.$el, readd: true }, storeObject);\n        return this._area;\n    }\n    /**\n     *\n     * @param types\n     */\n    addTypes(types) {\n        for (let i in types) {\n            if (typeof this.elementTypes[i] === \"undefined\") {\n                types[i].prototype = \"component\";\n                this.elementTypes[i] = types[i];\n                this.componentList[i] = types[i];\n            }\n        }\n    }\n    setId() {\n        let id = this.name || \"c\" + \"-\" + this.counter;\n        this._area.setAttribute(\"data-id\", id);\n        this.id = id;\n        this.counter++;\n    }\n    /**\n     *\n     * @param name\n     * @param $el\n     */\n    mapField(name, $element) {\n        switch (name) {\n            case \"input\":\n                if ($element.getAttribute('type'))\n                    name = $element.getAttribute('type');\n                break;\n            case \"ul\":\n                name = \"list\";\n                $element === null || $element === void 0 ? void 0 : $element.setAttribute('data-type', \"list\");\n                break;\n        }\n        if (typeof this.elementTypes[name] === \"undefined\") { //unknown field type, back to default\n            name = \"kelement\";\n        }\n        if (($element === null || $element === void 0 ? void 0 : $element.getAttribute('data-type')) == \"list\") {\n            name = \"list\";\n        }\n        if (($element === null || $element === void 0 ? void 0 : $element.getAttribute('data-type')) == \"list-item\") {\n            name = \"listItem\";\n        }\n        return name;\n    }\n    /**\n     *\n     * @param el\n     * @param where\n     * @param html\n     */\n    insertElementByElement(el, where = 'beforeend', html) {\n        var _a;\n        (_a = el.$el) === null || _a === void 0 ? void 0 : _a.insertAdjacentHTML(where, html);\n    }\n    isPlainComponentObject(componentObject) {\n        return typeof componentObject.getName === \"undefined\";\n    }\n    isElementComponent($el) {\n        return this.elementTypes[this.mapField($el.tagName.toLowerCase(), $el)].prototype === \"component\";\n    }\n    addStyle(style) {\n        if (style) {\n            let stEl = document.createElement('style');\n            stEl.innerHTML = style;\n            this.$el.append(stEl);\n            return true;\n        }\n        return false;\n    }\n    isBuildStagePlainHTML(componentObject, name) {\n        if (componentObject.views) {\n            if (typeof componentObject.views[name] === \"function\") {\n                return false;\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * @TODO ermöglichen von server rendered und lazy rendered componenten + laden deren stores\n     * @TODO aufräumen von build, browser und server side rendering codes\n     * @TODO KOA anstatt express server implementieren\n     * @TODO asynchrone / await componenten + stores\n     *\n     *\n     * @param $el\n     * @param fieldTypeName\n     */\n    createComponent(name, $el, componentObject) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.isPlainComponentObject(componentObject)) {\n            // is sharedComponent don't create just return\n            if (!$el.firstChild) {\n                $el.appendChild(componentObject.dom.$el);\n            }\n            else {\n                $el.innerHTML = \"\";\n            }\n            return componentObject;\n        }\n        let s = this.store.dataH.store[name];\n        if (!s) {\n            try {\n                s = (_a = componentObject === null || componentObject === void 0 ? void 0 : componentObject.data) === null || _a === void 0 ? void 0 : _a.call(this.store.dataH, function (data) {\n                    console.log(`Fetched data from Store ${name} loading from component`, data);\n                });\n            }\n            catch (e) {\n                s = this.store.dataH.store[name];\n                console.log(e);\n            }\n        }\n        if (!s.addValidations) {\n            s = this.store.dataH.store[name];\n        }\n        this.translation.addTranslation(typeof componentObject.translations === \"function\" ? componentObject.translations.call() : componentObject.translations);\n        s.addValidations(componentObject.validations);\n        let storesObject = (_b = this.store.dataH) === null || _b === void 0 ? void 0 : _b.store.toObject();\n        let args = (_c = this.store.dataH) === null || _c === void 0 ? void 0 : _c.store.keys();\n        if (this.isBuildStagePlainHTML(componentObject, name)) {\n            if (componentObject.html) {\n                $el.innerHTML = componentObject.html.trim();\n            }\n        }\n        else {\n            //render from prebuilt Templates\n            $el.innerHTML = (componentObject.views[name].call(componentObject, Object.assign(Object.assign({ change: { value: \"\" } }, storesObject), { _t: this._t, env: (_d = this.store) === null || _d === void 0 ? void 0 : _d.dataH.environment })) + \"\").trim();\n        }\n        for (let name in componentObject.components) {\n            if (typeof componentObject.components[name] === \"string\") {\n                let nameID = componentObject.components[name].split(\"#\").length > 0 ? componentObject.components[name].split(\"#\")[1] : componentObject.components[name];\n                componentObject.components[name] = this.componentList[nameID];\n            }\n        }\n        let enrichedTypes = ((componentObject === null || componentObject === void 0 ? void 0 : componentObject.components) || {}); //{ ...this.componentList, ...(componentObject?.components || {}) };\n        console.log(\"enrichedTypes\", enrichedTypes);\n        let ddom = new dom($el, enrichedTypes, s, componentObject === null || componentObject === void 0 ? void 0 : componentObject.views, this.translation, this.counter);\n        ddom.name = name;\n        $el.setAttribute(\"data-name\", name);\n        console.log(\"CREATE COMPONENT:\", name, s, componentObject.views, componentObject);\n        let iactions;\n        try {\n            iactions = (_e = componentObject === null || componentObject === void 0 ? void 0 : componentObject.interactions) === null || _e === void 0 ? void 0 : _e.call({ componentObject, dom: ddom });\n        }\n        catch (e) {\n            console.log(e);\n            iactions = {};\n        }\n        let newcomponent = new _component_js__WEBPACK_IMPORTED_MODULE_12__[\"component\"](ddom, iactions);\n        if (this.isBuildStagePlainHTML(componentObject, name)) {\n            ddom.addStyle(componentObject === null || componentObject === void 0 ? void 0 : componentObject.style);\n            newcomponent.dom.setTemplate(eval('(function (args) { let {change, ' + args + ', _t, env} = args; return `' + newcomponent.dom._area.innerHTML.trim() + '`})'));\n        }\n        else {\n            newcomponent.dom.setTemplate(componentObject === null || componentObject === void 0 ? void 0 : componentObject.views[name]);\n            ddom.addStyle(componentObject === null || componentObject === void 0 ? void 0 : componentObject.style);\n        }\n        if (typeof (componentObject === null || componentObject === void 0 ? void 0 : componentObject.mounted) === \"function\" && ((_f = componentObject === null || componentObject === void 0 ? void 0 : componentObject.views) === null || _f === void 0 ? void 0 : _f[name])) {\n            componentObject === null || componentObject === void 0 ? void 0 : componentObject.mounted.call(newcomponent);\n        }\n        return newcomponent;\n    }\n    /**\n     *\n     * @param $el\n     * @param currentIndex\n     */\n    createElement($el, currentIndex) {\n        let fieldTypeName = this.mapField($el.tagName.toLowerCase(), $el);\n        return this.elementTypes[fieldTypeName].prototype === \"component\" ?\n            this.createComponent(fieldTypeName.split(\"-\")[0], $el, this.elementTypes[fieldTypeName]) :\n            new this.elementTypes[fieldTypeName]($el, this._area, currentIndex, this, this.views, this._t);\n    }\n    /**\n     *\n     * @param t_el\n     */\n    detectType(t_el) {\n        var _a, _b, _c, _d, _e;\n        if (!(t_el === null || t_el === void 0 ? void 0 : t_el.getName)) {\n            console.log(\"t_el\", t_el);\n        }\n        let last = (_b = (_a = t_el === null || t_el === void 0 ? void 0 : t_el.getName()) === null || _a === void 0 ? void 0 : _a.split(\"/\")) === null || _b === void 0 ? void 0 : _b.pop();\n        if (!isNaN(last) || ((_c = t_el === null || t_el === void 0 ? void 0 : t_el.$el) === null || _c === void 0 ? void 0 : _c.getAttribute('data-type')) == \"list-item\") {\n            t_el.setIsListItem(true);\n            let id = (_e = (_d = t_el.$el) === null || _d === void 0 ? void 0 : _d.parentElement) === null || _e === void 0 ? void 0 : _e.getAttribute(\"data-id\");\n            if (id) {\n                if (this.element[id]) {\n                    t_el.setListContainer(this.element[id]);\n                }\n            }\n        }\n    }\n    /**\n     *\n     * @param $el\n     * @param currentIndex\n     */\n    loadElement($el, currentIndex) {\n        if (!this.kelementBy$el.get($el)) {\n            this.kelementBy$el.set($el, \"loading\");\n            console.log(\"LOAD \" + this.id, $el);\n            let t_el = this.createElement($el, currentIndex + 1); //decorate and extend dom element\n            this.detectType(t_el);\n            this.addElement(t_el);\n            if (t_el.getName()) {\n                this.addElementByName(t_el, t_el.getName());\n            }\n            else {\n                this.detectOrphanVariables(t_el)\n                    .forEach(name => this.addElementByName(t_el, name));\n            }\n            this.kelementBy$el.set($el, t_el);\n            return t_el;\n        }\n        else {\n            if (this.kelementBy$el.get($el) !== \"loading\") {\n                return this.kelementBy$el.get($el);\n            }\n            else {\n                this.kelementBy$el.delete($el);\n            }\n        }\n    }\n    /**\n     * detect orphan variable usages\n     * @param t_el\n     */\n    detectOrphanVariables(t_el) {\n        if (!t_el.$el)\n            return [];\n        let tpNode = t_el.$el.cloneNode(true);\n        Array.from(tpNode.childNodes).map(e => { if (e.hasAttribute && e.hasAttribute(\"data-name\"))\n            e.remove(); });\n        let transForm = (m) => (\"/$\" + m[1])\n            .replace(/\\.|\\[|\\]|\\'|\\\"/g, '/')\n            .replace(/\\/\\//g, \"/\")\n            .replace(/\\/$/, '');\n        let tpl = Array.from((t_el.template ? t_el.template.toString() : t_el.$el.innerHTML).matchAll(/return `(\\$.*)`/gm))[0];\n        let names = [];\n        if (tpl && tpl[1]) {\n            names = Array.from(tpl[1].matchAll(/\\${([\\w\\.\\[\\]]*)}/ig), transForm);\n        }\n        //  console.log(tpNode.outerHTML);\n        return names;\n    }\n    _load($el, currentIndex) {\n        var _a, _b;\n        if (!($el === null || $el === void 0 ? void 0 : $el.hasAttribute(\"data-id\")) || ((_a = $el === null || $el === void 0 ? void 0 : $el.getAttribute(\"data-id\")) === null || _a === void 0 ? void 0 : _a.indexOf(this.name)) !== -1\n            || this.isElementComponent($el)\n            || ($el.hasAttribute(\"data-name\") && ((_b = $el.getAttribute(\"data-name\")) === null || _b === void 0 ? void 0 : _b.indexOf(\"/_state\")) !== -1)) {\n            this.counter++;\n            return this.loadElement($el, currentIndex);\n        }\n    }\n    loadElementsScoped($scope) {\n        if (!this._area.contains($scope)) {\n            return [];\n        }\n        let loaded = [];\n        let element = $scope.querySelectorAll(this._identifier);\n        try {\n            loaded = Array.from(element).map(($el, currentIndex) => this._load($el, this.counter)).filter(e => e);\n            let l = this._load($scope, this.counter);\n            if (l)\n                loaded.push(l);\n        }\n        catch (e) {\n            console.log(\"FIELD NOT LOADED ERROR:\", e);\n        }\n        return loaded;\n    }\n    loadElements() {\n        let element = this._area.querySelectorAll(this._identifier);\n        try {\n            element.forEach(($el, currentIndex) => this._load($el, currentIndex));\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    _removeElement(el) {\n        delete this.element[el.id];\n        let name = el.getName();\n        if (typeof this.elementByName[name] !== \"undefined\") {\n            this.elementByName[name] = this.elementByName[name].filter(function (element) {\n                return element.id !== el.id;\n            });\n        }\n        this.kelementBy$el.delete(el.$el);\n        el.$el.remove();\n    }\n    removeElement(el) {\n        let children = el.$el.querySelectorAll(this._identifier);\n        try {\n            children.forEach(($el, currentIndex) => this._removeElement(this.kelementBy$el.get($el)));\n        }\n        catch (e) {\n            console.log(e);\n        }\n        this._removeElement(el);\n    }\n    addElement(el) {\n        this.element[el.id] = el;\n    }\n    addElementByName(el, name) {\n        if (typeof this.elementByName[name] === \"undefined\") {\n            this.elementByName[name] = [];\n        }\n        if (!el.$el.hasAttribute(\"data-name\"))\n            el.$el.setAttribute(\"data-name\", name);\n        this.elementByName[name].push(el);\n    }\n    // patch  == [\n    //   { op: \"replace\", path: \"/firstName\", value: \"Albert\"},\n    //   { op: \"replace\", path: \"/contactDetails/phoneNumbers/0/number\", value: \"123\" },\n    //   { op: \"add\", path: \"/contactDetails/phoneNumbers/1\", value: {number:\"456\"}}\n    // ];\n    /**\n     *\n     * @param path\n     */\n    getBestMatchingElements(path, searchAncestors = true) {\n        let elements = [];\n        if (typeof this.elementByName[path] !== \"undefined\") {\n            return this.elementByName[path];\n        }\n        else if (searchAncestors) {\n            let parentPath = path.split(\"/\");\n            if (parentPath.length > 1) {\n                parentPath.pop();\n                elements = this.getBestMatchingElements(parentPath.join('/'));\n            }\n        }\n        return elements;\n    }\n    findMatchingElements(path) {\n        let onlyListContainer = [];\n        let elementsDetailedMatch = this.getBestMatchingElements(path);\n        let ArrayParentPath = this.getArrayParentPath(path);\n        if (ArrayParentPath !== path) { //get array container\n            onlyListContainer = this.getBestMatchingElements(ArrayParentPath).filter(function (item) {\n                return item.constructor.name === \"elist\";\n            }).filter(function (item) {\n                for (let i in elementsDetailedMatch) {\n                    if (item.$el.contains(elementsDetailedMatch[i].$el)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n        return [...onlyListContainer, ...elementsDetailedMatch];\n    }\n    getArrayParentPath(path) {\n        let parts = path.split(\"/\");\n        for (let i in parts) {\n            if (parseInt(parts[i]) == parts[i]) {\n                parts.splice(i);\n                break;\n            }\n        }\n        return parts.join(\"/\");\n    }\n    getArrayItemPath(path) {\n        let parts = path.split(\"/\");\n        for (let i in parts) {\n            if (parseInt(parts[i]) == parts[i]) {\n                return parts.splice(0, parseInt(i) + 1).join(\"/\");\n            }\n        }\n        return parts.join(\"/\");\n    }\n    pathContainsArray(path) {\n        return this.getArrayParentPath(path) !== path;\n    }\n    getParents($scope, selector) {\n        let foundElem;\n        while ($scope && $scope.parentNode && $scope != this.$el) {\n            foundElem = $scope.parentNode.querySelector(selector);\n            if (foundElem) {\n                return foundElem;\n            }\n            $scope = $scope.parentNode;\n        }\n        return null;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom.js?");

/***/ }),

/***/ "./build/dom/element.js":
/*!******************************!*\
  !*** ./build/dom/element.js ***!
  \******************************/
/*! exports provided: kelement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"kelement\", function() { return kelement; });\nclass kelement {\n    /**\n     *\n     * @param el\n     * @param $scope\n     * @param counter\n     * @param dom\n     */\n    constructor(el, $scope, counter, dom, views) {\n        var _a, _b, _c;\n        this._isListItem = false;\n        this.$el = el;\n        this.$scope = $scope;\n        this.dom = dom;\n        if (!this.$el.hasAttribute(\"data-id\")) {\n            this.setId(null, counter);\n        }\n        else {\n            this.id = this.$el.getAttribute('data-id');\n        }\n        if (views === null || views === void 0 ? void 0 : views[this.$el.getAttribute('data-view')]) {\n            this.setTemplate(views === null || views === void 0 ? void 0 : views[this.$el.getAttribute('data-view')]);\n            if (this.$el.hasAttribute('data-name')) {\n                let c = this.dom.store.accessByPath(this.$el.getAttribute('data-name'));\n                if (typeof c !== \"undefined\") {\n                    this.render({ op: \"add\", path: this.$el.getAttribute('data-name'), value: c });\n                }\n            }\n        }\n        else {\n            if (!(views === null || views === void 0 ? void 0 : views[this.id])) {\n                if (this.$el.innerHTML.trim() !== \"\") {\n                    let stores = (_b = (_a = this.dom.store) === null || _a === void 0 ? void 0 : _a.dataH) === null || _b === void 0 ? void 0 : _b.store.keys();\n                    try {\n                        this.setTemplate(eval('(function (args) { let {change, ' + stores + ', _t, env} = args; return `' + ((_c = this.$el.innerHTML) === null || _c === void 0 ? void 0 : _c.trim()) + '`})'));\n                    }\n                    catch (e) {\n                        console.log(\"ERRORXX\", e);\n                    }\n                }\n            }\n            else {\n                this.setTemplate(views === null || views === void 0 ? void 0 : views[this.id]);\n            }\n        }\n        if (!this.$el.hasAttribute(\"data-view\")) {\n            this.$el.setAttribute(\"data-view\", this.id);\n        }\n    }\n    getValue() {\n        return this.$el.value;\n    }\n    getName() {\n        return this.$el.getAttribute('data-name');\n    }\n    setId(namesp, counter) {\n        let id = namesp || this.$scope.getAttribute('data-id') + \"-e\" + \"-\" + counter;\n        this.$el.setAttribute(\"data-id\", id);\n        this.id = id;\n    }\n    update(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            let change = changes[i];\n            console.log(change.op, change.value, this.$el);\n            if (typeof this[change.op] !== \"undefined\") {\n                this[change.op](change);\n            }\n        }\n    }\n    setTemplate(template) {\n        this.template = template;\n    }\n    /**\n     * !!caution this is slow and overwrites the hole html of the $element\n     * @param data\n     */\n    render(change) {\n        var _a, _b, _c, _d, _e;\n        if (this.template) {\n            let stores = (_b = (_a = this.dom.store) === null || _a === void 0 ? void 0 : _a.dataH) === null || _b === void 0 ? void 0 : _b.store.toObject();\n            let newHTML = (this.template.call(this, Object.assign(Object.assign({ change }, stores), { _t: this.dom._t, env: (_c = this.dom.store) === null || _c === void 0 ? void 0 : _c.dataH.environment })) + \"\").trim();\n            if (this.$el.innerHTML !== newHTML) {\n                this.$el.innerHTML = newHTML;\n                if (this.$el.childElementCount > 0)\n                    (_e = (_d = this.dom.store) === null || _d === void 0 ? void 0 : _d.events) === null || _e === void 0 ? void 0 : _e.dispatchEvent(this.dom.name, `/$${this.dom.name}`, \"post_render\", { change: change, domScope: this.$el });\n            }\n        }\n        else {\n            this.$el.innerHTML = change.value;\n        }\n    }\n    replace(change) {\n        this.render(change);\n    }\n    add(change) {\n        this.render(change);\n    }\n    remove(change) {\n        var _a;\n        //if parent exists notify parent and remove el, otherwise tell domHandler to remove el\n        if (this.isListItem()) {\n            (_a = this.getListContainer()) === null || _a === void 0 ? void 0 : _a.remove(change);\n        }\n        else {\n            this.$el.remove();\n        }\n    }\n    isListItem() {\n        return this._isListItem;\n    }\n    setIsListItem(value) {\n        this._isListItem = value;\n    }\n    getListContainer() {\n        return this._listContainer;\n    }\n    setListContainer(value) {\n        this._listContainer = value;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element.js?");

/***/ }),

/***/ "./build/dom/element/button.js":
/*!*************************************!*\
  !*** ./build/dom/element/button.js ***!
  \*************************************/
/*! exports provided: button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"button\", function() { return button; });\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../element.js */ \"./build/dom/element.js\");\n\nclass button extends _element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] {\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/button.js?");

/***/ }),

/***/ "./build/dom/element/input.js":
/*!************************************!*\
  !*** ./build/dom/element/input.js ***!
  \************************************/
/*! exports provided: input */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"input\", function() { return input; });\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../element.js */ \"./build/dom/element.js\");\n\nclass input extends _element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] {\n    replace(change) {\n        this.$el.setAttribute(\"value\", change.value);\n        this.$el.value = change.value;\n    }\n    add(change) {\n        this.$el.setAttribute(\"value\", change.value);\n        this.$el.value = change.value;\n    }\n    /**\n     *\n     * @param change\n     */\n    render(change) {\n        console.log(\"RENDER\", change);\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input.js?");

/***/ }),

/***/ "./build/dom/element/input/checkbox.js":
/*!*********************************************!*\
  !*** ./build/dom/element/input/checkbox.js ***!
  \*********************************************/
/*! exports provided: checkbox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkbox\", function() { return checkbox; });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input.js */ \"./build/dom/element/input.js\");\n\nclass checkbox extends _input_js__WEBPACK_IMPORTED_MODULE_0__[\"input\"] {\n    /**\n   *\n   * @param change\n   */\n    render(change) {\n        this.$el.outerHTML = `<input type=\"checkbox\" data-name=\"${change.path}\" value=\"${change.value}\" />`;\n        return this.$el.outerHTML;\n    }\n    /**\n     *\n     * @param single\n     */\n    getValue(single = false) {\n        if (single)\n            return super.getValue();\n        return this.getFields()\n            .filter((checkbox) => checkbox.checked)\n            .map((checkbox) => checkbox.value);\n    }\n    getFields() {\n        return Array\n            .from(this.$scope.querySelectorAll(':scope input[data-name=\"' + this.getName() + '\"]'));\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input/checkbox.js?");

/***/ }),

/***/ "./build/dom/element/input/file.js":
/*!*****************************************!*\
  !*** ./build/dom/element/input/file.js ***!
  \*****************************************/
/*! exports provided: file */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"file\", function() { return file; });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input.js */ \"./build/dom/element/input.js\");\n\nclass file extends _input_js__WEBPACK_IMPORTED_MODULE_0__[\"input\"] {\n    /**\n   *\n   * @param change\n   */\n    render(change) {\n        this.$el.outerHTML = `<input type=\"file\" data-name=\"${change.path}\" value=\"${change.value}\" />`;\n        return this.$el.outerHTML;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input/file.js?");

/***/ }),

/***/ "./build/dom/element/input/radio.js":
/*!******************************************!*\
  !*** ./build/dom/element/input/radio.js ***!
  \******************************************/
/*! exports provided: radio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"radio\", function() { return radio; });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input.js */ \"./build/dom/element/input.js\");\n\nclass radio extends _input_js__WEBPACK_IMPORTED_MODULE_0__[\"input\"] {\n    /**\n   *\n   * @param change\n   */\n    render(change) {\n        this.$el.outerHTML = `<input type=\"radio\" data-name=\"${change.path}\" value=\"${change.value}\" />`;\n        return this.$el.outerHTML;\n    }\n    /**\n     *\n     * @param single\n     */\n    getValue(single = false) {\n        var _a;\n        return (_a = this.$scope.querySelector(':scope input[data-name=\"' + this.getName() + '\"]:checked')) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input/radio.js?");

/***/ }),

/***/ "./build/dom/element/input/range.js":
/*!******************************************!*\
  !*** ./build/dom/element/input/range.js ***!
  \******************************************/
/*! exports provided: range */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return range; });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input.js */ \"./build/dom/element/input.js\");\n\nclass range extends _input_js__WEBPACK_IMPORTED_MODULE_0__[\"input\"] {\n    /**\n   *\n   * @param change\n   */\n    render(change) {\n        this.$el.outerHTML = `<input type=\"range\" data-name=\"${change.path}\" value=\"${change.value}\" />`;\n        return this.$el.outerHTML;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input/range.js?");

/***/ }),

/***/ "./build/dom/element/input/text.js":
/*!*****************************************!*\
  !*** ./build/dom/element/input/text.js ***!
  \*****************************************/
/*! exports provided: text */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"text\", function() { return text; });\n/* harmony import */ var _input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input.js */ \"./build/dom/element/input.js\");\n\nclass text extends _input_js__WEBPACK_IMPORTED_MODULE_0__[\"input\"] {\n    /**\n     *\n     * @param change\n     */\n    render(change) {\n        this.$el.outerHTML = `<input type=\"text\" data-name=\"${change.path}\" value=\"${change.value}\" />`;\n        return this.$el.outerHTML;\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/input/text.js?");

/***/ }),

/***/ "./build/dom/element/textarea.js":
/*!***************************************!*\
  !*** ./build/dom/element/textarea.js ***!
  \***************************************/
/*! exports provided: textarea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"textarea\", function() { return textarea; });\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../element.js */ \"./build/dom/element.js\");\n\nclass textarea extends _element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] {\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/element/textarea.js?");

/***/ }),

/***/ "./build/dom/list.js":
/*!***************************!*\
  !*** ./build/dom/list.js ***!
  \***************************/
/*! exports provided: elist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elist\", function() { return elist; });\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element.js */ \"./build/dom/element.js\");\n\nclass elist extends _element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] {\n    constructor() {\n        super(...arguments);\n        this._listItems = {};\n        this._listItemsByName = {};\n    }\n    isListItem() {\n        return true;\n    }\n    getNativeListItems() {\n        var _a;\n        return Array.from((_a = this.$el) === null || _a === void 0 ? void 0 : _a.children);\n    }\n    getListItems(cached = false) {\n        return cached ? this._listItems : this.mapListItems();\n    }\n    mapListItems() {\n        var _a;\n        let mappedItems = {};\n        let items = this.getNativeListItems();\n        for (let e in items) {\n            let id = typeof items[e] !== \"undefined\" ? (_a = items[e]) === null || _a === void 0 ? void 0 : _a.getAttribute(\"data-id\") : \"\";\n            if (id in this.dom.element) {\n                mappedItems[id] = this.dom.element[id];\n                this._listItems[id] = this.dom.element[id];\n                this._listItemsByName[this.dom.element[id].getName()] = this.dom.element[id];\n            }\n            else {\n                let nelement = this.dom.loadElement(items[e]);\n                if (nelement) {\n                    mappedItems[nelement.id] = nelement;\n                    this._listItems[nelement.id] = nelement;\n                    this._listItemsByName[nelement.getName()] = nelement;\n                }\n            }\n        }\n        return mappedItems;\n    }\n    replace(change) {\n        console.log(\"replace whole list\");\n        this.render(change);\n    }\n    /**\n     *\n     * @TODO es fehlen teilweise elemente anch vielem hin und her geklicke\n     *\n     */\n    add(change) {\n        var _a, _b, _c, _d;\n        let where = \"afterbegin\";\n        let pointer = (_b = (_a = change.path) === null || _a === void 0 ? void 0 : _a.split(\"/\")) === null || _b === void 0 ? void 0 : _b.pop();\n        if (!isNaN(pointer)) {\n            let items = this.getListItems();\n            let pos = parseInt(pointer);\n            if (pos === 0) { // first added element\n                this.dom.insertElementByElement(this, where, this.renderItem(change));\n            }\n            //appendend to end\n            if (pos !== 0 && pos > Object.keys(items).length - 1) {\n                where = \"beforeend\";\n                this.dom.insertElementByElement(this, where, this.renderItem(change));\n            }\n            //inserted in between\n            if (pos > 0 && pos <= Object.keys(items).length - 1) {\n                function walkUntilFound(dir, where) {\n                    let inserted = false;\n                    for (let i = pos; i >= 0; i = i + dir) {\n                        let name = change.path.replace(/\\d+(\\D*)$/gm, i);\n                        if (this._listItemsByName[name]) {\n                            this.dom.insertElementByElement(this._listItemsByName[name], where, this.renderItem(change));\n                            inserted = true;\n                            break;\n                        }\n                    }\n                    return inserted;\n                }\n                if (!walkUntilFound.call(this, -1, \"afterend\")) {\n                    if (!walkUntilFound.call(this, 1, \"afterend\")) {\n                    }\n                }\n            }\n        }\n        else {\n            console.log(\"failed pointer from path\", change.path);\n        }\n        let addedEl = this.$el.querySelector(`:scope [data-name=\"${CSS.escape(change.path)}\"]`);\n        let resultEL = null;\n        if (addedEl)\n            (_d = (_c = this.dom.store) === null || _c === void 0 ? void 0 : _c.events) === null || _d === void 0 ? void 0 : _d.dispatchEvent(this.dom.name, `/$${this.dom.name}`, \"post_render\", { change: change, domScope: addedEl });\n        return resultEL;\n    }\n    remove(change) {\n        // super.remove(change);\n        this.mapListItems();\n        if (typeof this._listItemsByName[change.path] !== \"undefined\") {\n            this.dom.removeElement(this._listItemsByName[change.path]);\n            delete this._listItems[this._listItemsByName[change.path].id];\n            delete this._listItemsByName[change.path];\n        }\n    }\n    /**\n    * !!caution this is slow and overwrites the hole html of the $element\n    * @param data\n    */\n    render(change) {\n        var _a, _b;\n        let items = JSON.parse(JSON.stringify(change.value || [])).filter((i) => !!i);\n        this.$el.innerHTML = items.map((e, i) => this.renderItem({ op: \"add\", path: change.path + \"/\" + i, value: e })).join(\"\\r\\n\").trim();\n        (_b = (_a = this.dom.store) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.dispatchEvent(this.dom.name, `/$${this.dom.name}`, \"post_render\", { change: change, domScope: this.$el });\n    }\n    /**\n     *\n     * @param value\n     */\n    renderItem(change) {\n        var _a, _b, _c, _d, _e;\n        let pointer = (_b = (_a = change.path) === null || _a === void 0 ? void 0 : _a.split(\"/\")) === null || _b === void 0 ? void 0 : _b.pop();\n        change.index = pointer;\n        if (this.template) {\n            let storeObject = (_d = (_c = this.dom.store) === null || _c === void 0 ? void 0 : _c.dataH) === null || _d === void 0 ? void 0 : _d.store.toObject();\n            return (this.template.call(this, Object.assign(Object.assign({ change }, storeObject), { _t: this.dom._t, env: (_e = this.dom.store) === null || _e === void 0 ? void 0 : _e.dataH.environment })) + \"\").trim();\n        }\n        else {\n            return `<div data-type=\"list-item\" data-index=\"${pointer}\" data-name=\"${change.path}\">${change.value}</div>`;\n        }\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/list.js?");

/***/ }),

/***/ "./build/dom/list/listItem.js":
/*!************************************!*\
  !*** ./build/dom/list/listItem.js ***!
  \************************************/
/*! exports provided: listItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listItem\", function() { return listItem; });\n/* harmony import */ var _element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../element.js */ \"./build/dom/element.js\");\n\nclass listItem extends _element_js__WEBPACK_IMPORTED_MODULE_0__[\"kelement\"] {\n    render(change) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        if (this.template) {\n            let stores = (_b = (_a = this.dom.store) === null || _a === void 0 ? void 0 : _a.dataH) === null || _b === void 0 ? void 0 : _b.store.toObject();\n            if (typeof ((_c = this.getListContainer()) === null || _c === void 0 ? void 0 : _c.template) === \"function\") {\n                let para = document.createElement(\"DIV\");\n                para.innerHTML = (((_d = this.getListContainer()) === null || _d === void 0 ? void 0 : _d.template.call(this, Object.assign(Object.assign({ change }, stores), { _t: this.dom._t, env: (_e = this.dom.store) === null || _e === void 0 ? void 0 : _e.dataH.environment }))) + \"\").trim();\n                //what about outerHTML?\n                if (!(para === null || para === void 0 ? void 0 : para.firstChild)) {\n                    change.op = \"remove\";\n                    (_f = this.getListContainer()) === null || _f === void 0 ? void 0 : _f.remove(change);\n                }\n                else {\n                    this.$el.innerHTML = (_h = (_g = para === null || para === void 0 ? void 0 : para.firstChild) === null || _g === void 0 ? void 0 : _g.innerHTML) === null || _h === void 0 ? void 0 : _h.trim();\n                    (_k = (_j = this.dom.store) === null || _j === void 0 ? void 0 : _j.events) === null || _k === void 0 ? void 0 : _k.dispatchEvent(this.dom.name, `/$${this.dom.name}`, \"post_render\", { change: change, domScope: this.$el });\n                }\n            }\n            else {\n                this.$el.innerHTML = (this.template.call(this, Object.assign(Object.assign({ change }, stores), { _t: this.dom._t, env: (_l = this.dom.store) === null || _l === void 0 ? void 0 : _l.dataH.environment })) + \"\").trim();\n                (_o = (_m = this.dom.store) === null || _m === void 0 ? void 0 : _m.events) === null || _o === void 0 ? void 0 : _o.dispatchEvent(this.dom.name, `/$${this.dom.name}`, \"post_render\", { change: change, domScope: this.$el });\n            }\n        }\n        else {\n            this.$el.innerHTML = change.value;\n        }\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/list/listItem.js?");

/***/ }),

/***/ "./build/dom/list/select.js":
/*!**********************************!*\
  !*** ./build/dom/list/select.js ***!
  \**********************************/
/*! exports provided: select */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"select\", function() { return select; });\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../list.js */ \"./build/dom/list.js\");\n\nclass select extends _list_js__WEBPACK_IMPORTED_MODULE_0__[\"elist\"] {\n    /**\n     *\n     * @param value\n     */\n    renderItem(value) {\n        var _a;\n        return `<option data-type=\"list-item\" data-index=\"${value.index}\" data-name=\"${value.path}\">${(_a = value === null || value === void 0 ? void 0 : value.html) === null || _a === void 0 ? void 0 : _a.trim()}</option>`;\n    }\n    /**\n     *\n     * @param change\n     */\n    render(change) {\n        // this.$el.outerHTML = `<select data-type=\"list\" data-name=\"${change.path}\">${change.value.map(this.renderItem).join('')}</select>`;\n        //return this.$el.outerHTML;\n    }\n    getValue() {\n        const selected = this.$el.querySelectorAll(':scope option:checked');\n        return Array.from(selected).map(el => el.value);\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/dom/list/select.js?");

/***/ }),

/***/ "./build/eventHandler.js":
/*!*******************************!*\
  !*** ./build/eventHandler.js ***!
  \*******************************/
/*! exports provided: eventHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eventHandler\", function() { return eventHandler; });\n;\nclass eventHandler {\n    constructor() {\n        this.event = {};\n        this.eventByElement = {};\n    }\n    construct() {\n    }\n    /**\n     *  @TODO event handler geht noch nicht, unter anderem doppelte change events und komisches verhalten\n     */\n    remove(path, name) {\n        delete this.event[path][name];\n    }\n    removeByElement(component, element) {\n        var _a;\n        (_a = this.eventByElement[component]) === null || _a === void 0 ? void 0 : _a.delete(element);\n    }\n    add(path, name, cb, context) {\n        console.log(\"%cADD CUSTOM EVENT \", \"color: green; font-size: 12px\", path, name);\n        if (typeof cb !== \"function\")\n            return false;\n        if (typeof this.event[path] === \"undefined\") {\n            this.event[path] = {};\n        }\n        if (typeof this.event[path][name] === \"undefined\") {\n            this.event[path][name] = [];\n        }\n        if (this.event[path][name].indexOf({ cb, context }) === -1) {\n            this.event[path][name].push({ cb, context });\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    addByElement(component, id, name, cb, context) {\n        if (typeof cb !== \"function\")\n            return false;\n        if (typeof this.eventByElement[component] === \"undefined\") {\n            this.eventByElement[component] = new WeakMap();\n        }\n        let callbacks = this.eventByElement[component].get(id) || new Map();\n        if (!callbacks.has(cb)) {\n            callbacks.set(cb, { name, context });\n            console.log(\"%cADD EVENT TO $EL\", \"color: lightgreen; font-size: 12px\", component, id, name);\n            this.eventByElement[component].set(id, callbacks);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    dispatchEvent(component, id, name, args = null, returnValue = null, context) {\n        var _a;\n        let eventMap = [];\n        if (typeof id !== \"string\") {\n            let tmpData = (_a = this.eventByElement[component]) === null || _a === void 0 ? void 0 : _a.get(id);\n            for (let [cb, v] of tmpData) {\n                if (v.name === name)\n                    eventMap.push({ cb, context: v.context });\n            }\n        }\n        else {\n            eventMap = this.event[id] && this.event[id][name] ? this.event[id][name] : [];\n            if (component != \"_state\") {\n                for (let i in this.event) {\n                    if (id !== \"/\" && i !== id && id.indexOf(i) !== -1 && i.split(\"/\").length > 2) {\n                        if (this.event[i][name]) {\n                            eventMap.push(...this.event[i][name]);\n                        }\n                    }\n                }\n            }\n        }\n        if (eventMap) {\n            let ret =  false || returnValue;\n            let special = name.indexOf(\"pre_\") > -1 || name.indexOf(\"post_\") > -1;\n            if (!special)\n                ret = this.dispatchEvent(component, id, \"pre_\" + name, args, ret);\n            /**\n             * @TODO garbage collection der $el elemente und handling neu schreiben und vereinheitlichen genauso eventhandling\n             */\n            for (let i in eventMap) {\n                console.log(`%cFIRE ${(typeof id !== \"string\") ? \"$EL\" : \"CUSTOM\"} EVENT `, \"color: red; font-size: 12px\", component, id, name, i, eventMap[i].cb);\n                let mep = eventMap[i].cb.call(eventMap[i].context, args, ret);\n                if (typeof mep !== \"undefined\") {\n                    ret = mep;\n                }\n                if (false === ret) {\n                    break;\n                }\n            }\n            if (!special)\n                ret = this.dispatchEvent(component, id, \"post_\" + name, args, ret);\n            return ret;\n        }\n        else {\n            console.log(\"no listener for \", component, id, name);\n            return returnValue;\n        }\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/eventHandler.js?");

/***/ }),

/***/ "./build/i18n.js":
/*!***********************!*\
  !*** ./build/i18n.js ***!
  \***********************/
/*! exports provided: i18n */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i18n\", function() { return i18n; });\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./merge.js */ \"./build/merge.js\");\n\nclass i18n {\n    constructor() {\n        this.language = \"de_DE\";\n        this.translation = { en_EN: {} };\n    }\n    /**\n     *\n     * @param {*} translationData\n     */\n    addTranslation(translationData) {\n        translationData = translationData != null && translationData.constructor.name === \"Object\" ? translationData : {};\n        this.translation = Object(_merge_js__WEBPACK_IMPORTED_MODULE_0__[\"mergeDeep\"])(this.translation, translationData);\n    }\n    /**\n     *\n     * @param text\n     * @param language\n     * @returns\n     */\n    _t(text, language) {\n        language = language ? language : this.language;\n        if (this && typeof this.translation[language] !== \"undefined\" && typeof this.translation[language][text] !== \"undefined\") {\n            return this.translation[language][text];\n        }\n        return text;\n    }\n    /**\n     *\n     * @param langCode\n     */\n    setLanguage(langCode) {\n        if (langCode) {\n            this.language = langCode;\n        }\n    }\n    getLanguage() {\n        return this.language;\n    }\n    getLanguages() {\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/i18n.js?");

/***/ }),

/***/ "./build/merge.js":
/*!************************!*\
  !*** ./build/merge.js ***!
  \************************/
/*! exports provided: mergeDeep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeDeep\", function() { return mergeDeep; });\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nfunction mergeDeep(target, source) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n    if (!isObject(target) || !isObject(source)) {\n        return source;\n    }\n    Object.keys(source).forEach(key => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        }\n        else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n        }\n        else {\n            target[key] = sourceValue;\n        }\n    });\n    return target;\n}\n\n\n//# sourceURL=webpack://radbod/./build/merge.js?");

/***/ }),

/***/ "./build/middlewareHandler.js":
/*!************************************!*\
  !*** ./build/middlewareHandler.js ***!
  \************************************/
/*! exports provided: Middleware, middlewareHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Middleware\", function() { return Middleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"middlewareHandler\", function() { return middlewareHandler; });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Middleware {\n    constructor(obj) {\n        this.value = {};\n        let extras = [];\n        const stack = [];\n        const run = (...args) => __awaiter(this, void 0, void 0, function* () {\n            let done = args[args.length - 1];\n            if (typeof done === 'function') {\n                args.pop();\n                if (obj)\n                    done = done.bind(obj);\n            }\n            else\n                done = null;\n            try {\n                for (let func of stack) {\n                    if (obj)\n                        func = func.bind(obj);\n                    extras = yield new Promise((resolve, reject) => {\n                        func(...args.concat(extras), (err, ...extras) => {\n                            if (err)\n                                return reject(err);\n                            resolve(extras);\n                        });\n                    });\n                }\n                args = args.concat(extras);\n                if (done)\n                    done(...args);\n                return args;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n        Object.defineProperty(this, \"run\", { value: run });\n        Object.defineProperty(this, 'use', { value: fn => stack.push(fn) });\n    }\n}\nclass middlewareHandler {\n    constructor() {\n        this.middleware = {\n            preView: Middleware,\n            preData: Middleware,\n            preRouting: Middleware\n        };\n    }\n    construct(environment) {\n        this.environment = environment;\n    }\n    addMiddleware(type) {\n        this.middleware[type] = new Middleware(this.environment);\n        return this.middleware[type];\n    }\n    removeMiddleware(type) {\n        delete this.middleware[type];\n    }\n    getMiddleware(type) {\n        return this.middleware[type];\n    }\n    getValue(type) {\n        this.middleware[type].value;\n    }\n    setValue(type, value) {\n        this.middleware[type].value = value;\n    }\n    run(type, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.setValue(type, yield this.middleware[type].run.apply(this.environment, args));\n                return this.getValue(type);\n            }\n            catch (err) {\n                console.log('err', err.toString());\n            }\n        });\n    }\n}\n\n\n//# sourceURL=webpack://radbod/./build/middlewareHandler.js?");

/***/ }),

/***/ "./build/store.js":
/*!************************!*\
  !*** ./build/store.js ***!
  \************************/
/*! exports provided: dataHandler, meta, store */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"meta\", function() { return meta; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"store\", function() { return store; });\n/* harmony import */ var _dataHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataHandler.js */ \"./build/dataHandler.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dataHandler\", function() { return _dataHandler_js__WEBPACK_IMPORTED_MODULE_0__[\"dataHandler\"]; });\n\n\nvar validationMode;\n(function (validationMode) {\n    validationMode[validationMode[\"fifo\"] = 0] = \"fifo\";\n    validationMode[validationMode[\"all\"] = 0] = \"all\";\n})(validationMode || (validationMode = {}));\nclass meta {\n    constructor(eventH) {\n        this._meta = {};\n        this._state = {};\n        this.events = eventH;\n    }\n    getMeta(fieldPath) {\n        var _a;\n        return (_a = this._meta[this.normalizeFieldpath(fieldPath)]) !== null && _a !== void 0 ? _a : { validationMode: validationMode.all, validators: {} };\n    }\n    setMeta(fieldPath, value) {\n        var _a;\n        value.validationMode = (_a = value === null || value === void 0 ? void 0 : value.validationMode) !== null && _a !== void 0 ? _a : validationMode.all;\n        this._meta[this.normalizeFieldpath(fieldPath)] = value;\n    }\n    normalizeFieldpath(fieldPath) {\n        return fieldPath.replace(\"/_state\", \"\");\n    }\n    getState(fieldPath) {\n        var _a;\n        return (_a = this._state[this.normalizeFieldpath(fieldPath)]) !== null && _a !== void 0 ? _a : { isValid: true, msg: [] };\n    }\n    setState(fieldPath, info) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        fieldPath = this.normalizeFieldpath(fieldPath);\n        let validChanged = ((_a = this._state[fieldPath]) === null || _a === void 0 ? void 0 : _a.isValid) !== info.isValid;\n        let msgChanged = ((_b = this._state[fieldPath]) === null || _b === void 0 ? void 0 : _b.msg) !== info.msg;\n        if (validChanged || msgChanged) {\n            this._state[fieldPath] = info;\n            (_c = this.events) === null || _c === void 0 ? void 0 : _c.dispatchEvent(\"_state\", \"/_state\" + fieldPath, \"change\", [{ op: \"replace\", path: \"/_state\" + fieldPath, value: info }], info);\n            if (validChanged) {\n                (_d = this.events) === null || _d === void 0 ? void 0 : _d.dispatchEvent(\"_state\", \"/_state\" + fieldPath + \"/isValid\", \"change\", [{ op: \"replace\", path: \"/_state\" + fieldPath + \"/isValid\", value: info.isValid }], info);\n                (_e = this.events) === null || _e === void 0 ? void 0 : _e.dispatchEvent(\"_state\", \"/\", \"change\", [{ op: \"replace\", path: \"/_state\" + fieldPath + \"/isValid\", value: info.isValid }], info);\n            }\n            if (msgChanged) {\n                (_f = this.events) === null || _f === void 0 ? void 0 : _f.dispatchEvent(\"_state\", \"/_state\" + fieldPath + \"/msg\", \"change\", [{ op: \"replace\", path: \"/_state\" + fieldPath + \"/msg\", value: info.msg }], info);\n                (_g = this.events) === null || _g === void 0 ? void 0 : _g.dispatchEvent(\"_state\", \"/_state\", \"change\", [{ op: \"replace\", path: \"/_state\" + fieldPath + \"/msg\", value: info.msg }], info);\n            }\n        }\n    }\n}\nclass store {\n    constructor(eventH, dataH, component, data) {\n        this._data = {};\n        this.patchQueue = [];\n        this._validations = {};\n        this.events = eventH;\n        this.dataH = dataH;\n        this.component = component;\n        this.name = component;\n        this.createStore(component, data);\n    }\n    unmaskComponentName(component, char = \"$\") {\n        return component.charAt(0) === char ? component.substr(1) : component;\n    }\n    accessByPath(path) {\n        if (path.indexOf(\"_state\") !== -1) {\n            return this._meta.getState(path);\n        }\n        let properties = Array.isArray(path) ? path : this.unmaskComponentName(path, \"/\").split(\"/\");\n        return properties.reduce((prev, curr) => prev && prev[curr], this.dataH.pxy);\n    }\n    getMetaState() {\n        return this._meta;\n    }\n    validateField(fieldPath, value) {\n        let metaData = this._meta.getMeta(fieldPath);\n        let stateData = { isValid: true, msg: [] };\n        if (metaData === null || metaData === void 0 ? void 0 : metaData.validators) {\n            for (let v in metaData.validators) {\n                let result = metaData.validators[v](value);\n                if (!result.isValid) {\n                    stateData.msg.push(result.msg);\n                    stateData.isValid = false;\n                }\n            }\n        }\n        this._meta.setState(fieldPath, stateData);\n        return stateData;\n    }\n    createStore(component, data) {\n        let createProxy = (data, parentPath = `/$${component}`) => {\n            const handler = {\n                get: (oTarget, key) => {\n                    var _a, _b, _c;\n                    if (typeof oTarget[key] === 'function')\n                        return oTarget[key];\n                    if (typeof oTarget[key] === 'object' && oTarget[key] !== null) {\n                        let px = parentPath + \"/\" + key;\n                        if (key.charAt(0) === \"$\") { //reference\n                            px = key;\n                        }\n                        this.dataH.pxy[px] = ((_a = this.dataH) === null || _a === void 0 ? void 0 : _a.pxy[px]) || createProxy(oTarget[key], px);\n                        return (_c = (_b = this.dataH) === null || _b === void 0 ? void 0 : _b.pxy) === null || _c === void 0 ? void 0 : _c[px];\n                    }\n                    else {\n                        return oTarget[key];\n                    }\n                    /**\n                     * @todo get value and use this.pxy[px] for $ connected values\n                     */\n                },\n                set: (oTarget, sKey, vValue) => {\n                    let op = typeof oTarget[sKey] === \"undefined\" ? \"add\" : \"replace\";\n                    let diff = { op, path: parentPath + \"/\" + sKey, value: vValue };\n                    /**\n                     * @todo set value and use this.pxy[px] for $ connected values\n                     */\n                    let result = this.validateField(diff.path, vValue);\n                    if (oTarget[sKey] !== vValue) {\n                        if (result.isValid) {\n                            oTarget[sKey] = vValue;\n                            let tmpChain = this.changeStore(component, diff);\n                        }\n                        else {\n                            /*  return false; */\n                        }\n                    }\n                    return true;\n                },\n                deleteProperty: (oTarget, sKey) => {\n                    console.log(\"delete\", oTarget[sKey]);\n                    let result = this.validateField(parentPath + \"/\" + sKey, null);\n                    if (result.isValid) {\n                        delete oTarget[sKey];\n                        this.changeStore(component, { op: \"remove\", path: parentPath + \"/\" + sKey, value: undefined });\n                    }\n                    else {\n                        /*  return false; */\n                    }\n                    return true;\n                },\n                defineProperty: (oTarget, sKey, oDesc) => {\n                    console.log(\"DEFINE\", oTarget[sKey]);\n                    if (oDesc && \"value\" in oDesc) {\n                        oTarget[sKey] = oDesc.value;\n                    }\n                    return oTarget;\n                }\n            };\n            //create meta here and set prefix path\n            this._meta = new meta(this.events);\n            return new Proxy(data, handler);\n        };\n        if (typeof data !== \"object\") {\n            console.log(\"store data is not an object\", typeof data, data);\n            data = {};\n        }\n        //  if(typeof this.dataH.pxy[`$${component}`] === \"undefined\"){\n        this.dataH.pxy[`$${component}`] = this._data = createProxy(data); //fjp.default.deepClone(data);\n        // }else{\n        //      Object.assign(this.dataH.pxy[`$${component}`], data);\n        // }\n        return this;\n    }\n    /**\n     * collect all changes then bubble event after ...what is important?\n     * @param component\n     * @param changes\n     */\n    changeStore(component, change) {\n        var _a, _b, _c;\n        let ret = null;\n        this.patchQueue.push(change);\n        if (this.patchQueue.length > 100)\n            this.patchQueue.shift();\n        let retChange = (_a = this.events) === null || _a === void 0 ? void 0 : _a.dispatchEvent(component, \"/\" + `$${component}`, \"change\", [change], this.data);\n        //console.log(component, \"/\", \"change\", change);\n        try {\n            ret = (_b = this.events) === null || _b === void 0 ? void 0 : _b.dispatchEvent(component, change.path, \"change\", [change], this.data);\n            ret = (_c = this.events) === null || _c === void 0 ? void 0 : _c.dispatchEvent(component, change.path, change.op, [change], this.data, ret);\n        }\n        catch (e) {\n            ret = retChange;\n        }\n        return ret;\n    }\n    get data() {\n        return this._data;\n    }\n    db() {\n        return this._storage;\n    }\n    setDb(db) {\n        return this._storage = db;\n    }\n    setValidations(validations) {\n        this._validations = validations;\n        return this;\n    }\n    addValidations(validations) {\n        validations = validations != null && validations.constructor.name === \"Object\" ? validations : {};\n        this._validations = Object.assign(this._validations, validations);\n        return this;\n    }\n    getValidations() {\n        return this._validations;\n    }\n    load(selector, cb) {\n        if (this.db()) {\n            return new Promise((resolve, reject) => this.db().find(selector, (data) => {\n                if (typeof data === \"object\")\n                    this.createStore(this.name, data);\n                resolve(data);\n                cb.call(this.dataH, data);\n            }));\n        }\n        else {\n            return this.data;\n        }\n    }\n}\nstore.prototype.find = store.prototype.load;\n\n\n//# sourceURL=webpack://radbod/./build/store.js?");

/***/ })

/******/ });